#
# spec file for package kiwi
#
# Copyright (c) 2016 SUSE LINUX GmbH, Nuernberg, Germany.
#
# All modifications and additions to the file contributed by third parties
# remain the property of their copyright owners, unless otherwise agreed
# upon. The license for this file, and modifications and additions to the
# file, is the same license as for the pristine package itself (unless the
# license for the pristine package is not an Open Source License, in which
# case the license is the MIT License). An "Open Source License" is a
# license that conforms to the Open Source Definition (Version 1.9)
# published by the Open Source Initiative.
#
# Please submit bugfixes or comments via:
#
#       https://github.com/SUSE/kiwi/issues
#
Name:           python-kiwi
Version:        %%VERSION
Release:        0
Url:            https://github.com/SUSE/azurectl
Summary:        KIWI - Appliance Builder Next Generation
License:        GPL-2.0+
Group:          Development/Languages/Python
Source:         python-kiwi.tar.bz2
BuildRoot:      %{_tmppath}/%{name}-%{version}-build
BuildRequires:  python-devel
BuildRequires:  python-setuptools
BuildRequires:  python-Sphinx
BuildRequires:  fdupes
Requires:       python-docopt
Requires:       python-setuptools
Requires:       python-lxml
# tools used by kiwi
Requires:       kiwi-tools >= %{version}
Requires:       rsync
Requires:       tar
Requires:       gptfdisk
Requires:       qemu-tools
Requires:       dosfstools
Requires:       genisoimage
Requires:       e2fsprogs
Requires:       lvm2
Requires:       parted
Requires:       multipath-tools
Requires:       squashfs
Requires:       grub2
Requires:       syslinux
Requires:       mtools
%ifarch %arm aarch64
Requires:       u-boot-tools
%endif
%ifarch x86_64
Requires:       grub2-x86_64-efi
%endif
%ifarch s390 s390x
Requires:       s390-tools
%endif

%description
The KIWI Image System provides an operating system image builder
for Linux supported hardware platforms as well as for virtualization
and cloud systems like Xen, KVM, VMware, EC2 and more.

%package -n kiwi-tools
Summary:        KIWI - Collection of Boot Helper Tools
License:        GPL-2.0+
Group:          System/Management

%description -n kiwi-tools
This package contains a small set of helper tools used for the
kiwi created initial ramdisk which is used to control the very
first boot of an appliance. The tools are not meant to be used
outside of the scope of kiwi appliance building.

%ifarch %ix86 x86_64
%package -n kiwi-pxeboot
Summary:        KIWI - PXE boot structure
Requires:       syslinux
License:        GPL-2.0+
Group:          System/Management
BuildArch:      noarch

%description -n kiwi-pxeboot
This package contains the basic PXE directory structure which is
needed to serve kiwi built images via PXE.
%endif

%prep
%setup -q -n kiwi-%{version}

%build
test -e /.buildenv && . /.buildenv
make buildroot=%{buildroot} CFLAGS="${RPM_OPT_FLAGS}" tools
make buildroot=%{buildroot} man
python setup.build.py build

%install
make buildroot=%{buildroot} install_tools
make buildroot=%{buildroot} install_man
python setup.build.py install --prefix=%{_prefix} --root=%{buildroot}
mkdir -p %{buildroot}/etc/bash_completion.d
install -m 644 completion/kiwi.sh %{buildroot}/etc/bash_completion.d

%ifarch %ix86 x86_64
for i in KIWI pxelinux.cfg image upload boot; do \
    mkdir -p %{buildroot}/srv/tftpboot/$i ;\
done
%endif

%fdupes %{buildroot}/srv/tftpboot
%fdupes %{buildroot}/%{python_sitelib}/kiwi


%ifarch %ix86 x86_64
%pre -n kiwi-pxeboot
#============================================================
# create user and group tftp if they does not exist
if ! /usr/bin/getent group tftp >/dev/null; then
    %{_sbindir}/groupadd -r tftp 2>/dev/null || :
fi
if ! /usr/bin/getent passwd tftp >/dev/null; then
    %{_sbindir}/useradd -c "TFTP account" -d /srv/tftpboot -G tftp -g tftp \
        -r -s /bin/false tftp 2>/dev/null || :
fi

%post -n kiwi-pxeboot
#============================================================
# create /srv/tftpboot/pxelinux.cfg/default only if not exist
if ( [ ! -e srv/tftpboot/pxelinux.cfg/default  ] ) ; then
    cp /srv/tftpboot/pxelinux.cfg/default.default \
        /srv/tftpboot/pxelinux.cfg/default
fi
%endif

%files
%defattr(-,root,root,-)
%{_bindir}/kiwi
%{_bindir}/kiwicompat
%{python_sitelib}/kiwi-%{version}-py%{py_ver}.egg-info
%{python_sitelib}/kiwi
%config /etc/bash_completion.d/kiwi.sh
%doc %{_mandir}/man2/*

%files -n kiwi-tools
%defattr(-, root, root)
%exclude %{_bindir}/kiwi
%exclude %{_bindir}/kiwicompat
%{_bindir}/*

%ifarch %ix86 x86_64
%files -n kiwi-pxeboot
%defattr(-, root, root)
%dir %attr(0750,tftp,tftp) /srv/tftpboot
%dir /srv/tftpboot/KIWI
%dir /srv/tftpboot/pxelinux.cfg
%dir /srv/tftpboot/image
%dir /srv/tftpboot/upload
%dir /srv/tftpboot/boot
%endif

%changelog
